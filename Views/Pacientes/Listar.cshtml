@model IEnumerable<Models.ViewModel.PacientesViewModel>
@{
    ViewData["Title"] = "Lista de Pacientes";
    var path = "http://localhost:5050/Imagens/";
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MediClinic - Sistema de Gest√£o</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        body { font-family: 'Inter', sans-serif; }
        .fade-in { animation: fadeIn 0.3s ease-in; }
        @@keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-lg border-b-4 border-blue-500">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-3">
                    <div class="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
                        <span class="text-white font-bold text-lg">M</span>
                    </div>
                    <h1 class="text-2xl font-bold text-gray-800">MediClinic</h1>
                </div>
                <div class="text-sm text-gray-600">
                    <span id="currentDate"></span>
                </div>
            </div>
        </div>
    </header>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <nav class="mb-8">
            <div class="flex flex-wrap gap-2 bg-white rounded-xl p-2 shadow-md">
                <a  asp-controller="Home" asp-action="Index" class="nav-btn bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-medium transition-all hover:bg-gray-200">
                    üìä Dashboard
                </a>
                <a asp-controller="Pacientes" asp-action="Index" class="nav-btn bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-all hover:bg-blue-700">
                    üë• Pacientes
                </a>
                <a asp-controller="Medicos" asp-action="Index" class="nav-btn bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-medium transition-all hover:bg-gray-200">
                    üë®‚Äç‚öïÔ∏è M√©dicos
                </a>
                <a asp-controller="Consultas" asp-action="Index" class="nav-btn bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-medium transition-all hover:bg-gray-200">
                    üìÖ Consultas
                </a>
                <a asp-controller="Ambulatorios" asp-action="Index" class="nav-btn bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-medium transition-all hover:bg-gray-200">
                    üè• Ambulat√≥rios
                </a>
                <a asp-controller="Funcionarios" asp-action="Index" class="nav-btn bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-medium transition-all hover:bg-gray-200">
                    üëî Funcion√°rios
                </a>    
        </nav>
    
    <!-- Pacientes Section -->
    <div class="bg-white rounded-xl shadow-md">
        <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-semibold text-gray-800">Gest√£o de Pacientes</h2>
                <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-all">
                    @Html.ActionLink("+ Novo Paciente", "Cadastro", "Pacientes")
                </button>
            </div>
        </div>
        <div class="p-6">
            @* <div class="mb-4">
                <input type="text" id="searchPacientes" placeholder="Buscar pacientes..." class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" onkeyup="filterTable('pacientesTable', this.value)">
            </div> *@
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-4 py-3 text-sm font-medium text-gray-700">Foto</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">C√≥digo</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Nome</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Idade</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Cidade</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">CPF</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-700">Doen√ßa</th>
                            <th class="px-4 py-3 text-center text-sm font-medium text-gray-700">A√ß√µes</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="px-2 py-1">
                                    <img src="@(item.imagePath == null ?
                                            path + "profileDefault.png" :
                                            path + item.imagePath)"
                                        class="img-thumbnail rounded-circle shadow-sm"
                                        style="width: 50px; height: 50px; object-fit: cover" />
                                </td>

                                <td class="px-4 py-3 text-center text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.codp)
                                </td>
                                <td class="px-4 py-3 text-left text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.nome)
                                </td>
                                <td class="px-4 py-3 text-left text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.idade)
                                </td>
                                <td class="px-4 py-3 text-left text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.cidade)
                                </td>
                                <td class="px-4 py-3 text-left text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.CPF)
                                </td>
                                <td class="px-4 py-3 text-left text-sm text-gray-900">
                                    @Html.DisplayFor(model => item.doenca)
                                </td>

                                <!-- Coluna unificada de A√ß√µes -->
                                <td class="px-4 py-3 text-right text-sm">
                                    <a href="@Url.Action("Cadastro", "Pacientes", new { codp = item.codp })"
                                    class="text-yellow-600 hover:text-yellow-800 transition-all font-medium">
                                        Editar
                                    </a>
                                    <span class="text-gray-400 mx-2">|</span>
                                    <a href="@Url.Action("Excluir", "Pacientes", new { codp = item.codp })"
                                    class="text-red-600 hover:text-red-800 transition-all font-medium">
                                        Excluir
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</body>
<script>
    function updateDateTime() {
        const now = new Date();
        const options = {
            weekday: "long",
            year: "numeric",
            month: "long",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit" 
        };
        const formatted = now.toLocaleDateString("pt-BR", options);
        document.getElementById("currentDate").textContent = formatted;
    }

    // Atualiza ao carregar
    updateDateTime();
    // Atualiza em tempo real (a cada 1 segundo)
    setInterval(updateDateTime, 1000);
</script>